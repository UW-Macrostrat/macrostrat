services:
  gateway:
    image: caddy:2-alpine
    ports:
      - "8080:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    labels:
      - dev.orbstack.domains=macrostrat.local,storage.macrostrat.local,storage-ui.macrostrat.local
  database:
    # PostgreSQL 13 is needed in order to allow force-dropping the database
    # (in testing mode)
    # docker pull imresamu/postgis:15-3.4
    build:
      context: ../base-images/database
    image: ${PG_DATABASE_CONTAINER:-imresamu/postgis:15-3.4}
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_DB
      # This allows connections without a password, which is expedient but insecure...
      - POSTGRES_PASSWORD
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGPORT=5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${MACROSTRAT_DB_PORT:-5432}:5432"
    expose:
      - 5432
    volumes:
      - db_cluster:/var/lib/postgresql/data
  mariadb:
    # The MariaDB service is Macrostrat's v1 database service.
    # This is currently being removed from the active configuration
    # and relegated to a 'legacy' profile. But for now, we need it
    # at least for inspection purposes.
    image: mariadb:10.10
    ports:
      - "3306:3306"
    environment:
      - MARIADB_ROOT_PASSWORD
    volumes:
      - mysql_cluster:/var/lib/mysql
    restart: always
    profiles:
      - legacy
  api_v2:
    image: hub.opensciencegrid.org/macrostrat/macrostrat-api:main
    build: ${MACROSTRAT_API_SRC:-""}
    environment:
      - MACROSTRAT_DATABASE=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      - ELEVATION_DATABASE=${ELEVATION_DATABASE_URL}
  api_v3:
    build: ${MACROSTRAT_API_V3_SRC:-""}
    environment:
      - DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      - REDIRECT_URI=https://macrostrat.local/api/v3/security/callback
      - SECRET_KEY=${SECRET_KEY}
      - JWT_ENCRYPTION_ALGORITHM=HS256
      - OAUTH_TOKEN_URL=${OAUTH_TOKEN_URL:-https://orcid.org/oauth/token}
      - OAUTH_CLIENT_ID
      - OAUTH_CLIENT_SECRET
      - OAUTH_USERINFO_URL=${OAUTH_USERINFO_URL:-https://orcid.org/oauth/userinfo}
      - OAUTH_AUTHORIZATION_URL=${OAUTH_AUTHORIZATION_URL:-https://orcid.org/oauth/authorize}
  postgrest:
    image: postgrest/postgrest:v12.0.2
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
      - PGRST_DB_SCHEMA=macrostrat_api
      - PGRST_DB_ANON_ROLE=web_anon
      - PGRST_SERVER_PORT=3000
      - PGRST_SERVER_HOST=
  # Tileserver
  tileserver:
    image: hub.opensciencegrid.org/macrostrat/tileserver:main
    #profiles: ['tileserver']
    build:
      context: ${MACROSTRAT_TILESERVER_SRC:-""}
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
  # Storage
  storage:
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z-cpuv1
    environment:
      - MINIO_ROOT_USER=${STORAGE_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${STORAGE_SECRET_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server --address 0.0.0.0:9000 --console-address 0.0.0.0:9001 /data
  web:
    image: hub.opensciencegrid.org/macrostrat/macrostrat-web:main
    build: ${MACROSTRAT_WEB_SRC:-""}
    environment:
      - VITE_MAPBOX_API_TOKEN=${MAPBOX_TOKEN}
      - VITE_MACROSTRAT_TILESERVER_DOMAIN=https://macrostrat.local/tiles
      - MACROSTRAT_API_PROXY_DOMAIN=https://dev2.macrostrat.org
      - VITE_MACROSTRAT_API_DOMAIN=https://macrostrat.local
        # Secret key must be shared with the API that mints the JWT (in this case, the Macrostrat dev API)
      - SECRET_KEY=${SECRET_KEY}
  # Schema-only Test DB instance for applying migrations
  migrations-test-db:
    image: postgis-with-audit
    profiles: ['migrations-test']
    build:
      context: .
      dockerfile: ./postgis-audit.Dockerfile
    ports:
      - "${MACROSTRAT_DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=macrostrat
volumes:
  db_cluster:
  mysql_cluster:
  minio_data:
