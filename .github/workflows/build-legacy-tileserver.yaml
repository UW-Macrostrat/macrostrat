name: Build legacy tileserver
on:
  push:
    # Branches and paths are exclusive
    branches: ["main"]
    paths:
      - services/legacy-tileserver/**
    tags:
      - legacy-tileserver-v[0-9]+.[0-9]+.[0-9]+ # Semver Release (non-prerelease)
      - legacy-tileserver-v[0-9]+.[0-9]+.[0-9]+-** # Semver release (prerelease)
  pull_request:
    branches: [main]
    paths:
      - services/legacy-tileserver/**
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
      # Set up python and poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install Poetry
        run: python3 -m pip install poetry==2.1.1
      - name: Build and stage local packages
        run: scripts/prepare-services
      - name: Get the version from the tag, if it exists
        run: |
          TAG=${{ github.ref_name }}
          VERSION=$(echo "${TAG}" | sed -E 's/legacy-tileserver-v//')
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: hub.opensciencegrid.org/macrostrat/legacy-tileserver
          tags: |
            type=raw,value=${{ env.VERSION }},enable=${{ env.VERSION != '' }}
            type=ref,event=pr,suffix=-{{date 'YYYYMMDDHHmmss'}}
            type=ref,event=branch,suffix=-{{date 'YYYYMMDDHHmmss'}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=sha-{{sha}}
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2
      - name: Login to OSG DockerHub
        uses: docker/login-action@v2
        with:
          registry: hub.opensciencegrid.org
          username: ${{ vars.HARBOR_CLI_NAME }}
          password: ${{ secrets.HARBOR_CLI_SECRET }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: services/legacy-tileserver
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
