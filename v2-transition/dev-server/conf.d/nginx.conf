server {
  # Listen to port 443 on both IPv4 and IPv6.
  listen 443 ssl;
  listen [::]:443 ssl;

  # Domain names this server should respond to.
  server_name dev.macrostrat.org;

  # Load the certificate files.
  ssl_certificate         /etc/letsencrypt/live/macrostrat_dev/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/macrostrat_dev/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/macrostrat_dev/chain.pem;

  # Enable HTTP/2.
  ssl_protocols TLSv1.2 TLSv1.3;

  # Serve a simple page to verify that the server is running.
  location / {
    resolver 127.0.0.11 valid=30s;
    set $upstream web;
    proxy_pass http://$upstream:80;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

  }

  location /api {
    resolver 127.0.0.11 valid=30s;
    set $upstream api;
    proxy_pass http://$upstream:5000;
    proxy_set_header Host $host;
  }

  location /tiles {
    # This config (including the seemingly useless variable declaration!)
    # prevents failures if some sub-container doesn't come up.
    resolver 127.0.0.11 valid=30s;
    set $upstream tileserver_cache;
    proxy_pass http://$upstream:80;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    # Uvicorn needs these headers to figure out what the proper
    # URL paths for the server are.
    proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # Add CORS headers  s

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
  }
}