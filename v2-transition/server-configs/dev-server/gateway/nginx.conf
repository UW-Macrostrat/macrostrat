proxy_cache_path /cache/
  levels=1:2 keys_zone=static_sites_cache:10m max_size=500m
  inactive=24h use_temp_path=off;

server {
  # Listen to port 443 on both IPv4 and IPv6.
  listen 443 ssl;
  listen [::]:443 ssl;

  # Domain names this server should respond to.
  server_name dev.macrostrat.org;

  # Load the certificate files.
  ssl_certificate         /etc/letsencrypt/live/macrostrat_dev/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/macrostrat_dev/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/macrostrat_dev/chain.pem;

  # Enable HTTP/2.
  ssl_protocols TLSv1.2 TLSv1.3;

  # Serve a simple page to verify that the server is running.
  location / {
    resolver 127.0.0.11 valid=30s;
    set $upstream web;
    proxy_pass http://$upstream:80;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /api {
    resolver 127.0.0.11 valid=30s;
    set $upstream api;
    proxy_pass http://$upstream:5000;
    proxy_set_header Host $host;
  }

  # Weaver API
  location ^~/weaver-api {
    default_type  application/json;
    proxy_hide_header Content-Location;
    add_header Content-Location  /weaver-api/$upstream_http_content_location;
    proxy_set_header  Connection "";
    proxy_pass http://postgrest_api/;
    proxy_set_header Accept-Profile "weaver_api";
    proxy_set_header Content-Profile "weaver_api";
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Location,Location,Accept-Profile';
  }

  location /tiles/ {
    # This config (including the seemingly useless variable declaration!)
    # prevents failures if some sub-container doesn't come up.
    # NOTE: We had to disable this in order to get tileserver routing to work
    proxy_pass http://tileserver_cache/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    # Uvicorn needs these headers to figure out what the proper
    # URL paths for the server are.
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # Add CORS headers  s

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
  }

  

  # Legacy static websites
  location /naukluft {

    # API reverse proxy (stripping path)
    location /naukluft/api {
      resolver 127.0.0.11 valid=30s;
      set $upstream naukluft_api;
      rewrite ^/naukluft/api/(.*) /$1 break;
      proxy_pass http://$upstream:5555;
      proxy_set_header Host $host;
    }

    # match anything with an extension
    rewrite [^/]*\.\w+$ $uri break;        
    # ending in normal word
    rewrite /\w+$      "/naukluft/index.html" break;
    # ending in /
    rewrite /$         "/naukluft/index.html" break;
    # catch all
    rewrite ^          "/naukluft/index.html" break;

    index index.html;


    set $s3_bucket_endpoint  "macrostrat-sites.s3.amazonaws.com";
    proxy_http_version     1.1;
    proxy_buffering        off;
    proxy_ignore_headers   "Set-Cookie";
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      x-amz-meta-s3cmd-attrs;
    proxy_hide_header      Set-Cookie;
    proxy_set_header       Authorization "";
    proxy_intercept_errors on;
    proxy_pass https://macrostrat-sites.s3.amazonaws.com;

    proxy_cache            static_sites_cache;
    proxy_cache_revalidate on;
    proxy_cache_use_stale  error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_lock       on;
    proxy_cache_valid      200 304 60m;
    proxy_cache_valid      403 404 1m;

    add_header             Cache-Control max-age=31536000;
    add_header             X-Cache-Status $upstream_cache_status;

  }

  location /mars/syrtis-jezero {
    # match anything with an extension
    rewrite [^/]*\.\w+$ $uri break;        
    # ending in normal word
    rewrite /\w+$      "/mars/syrtis-jezero/index.html" break;
    # ending in /
    rewrite /$         "/mars/syrtis-jezero/index.html" break;
    # catch all
    rewrite ^          "/mars/syrtis-jezero/index.html" break;

    index index.html;

    set $s3_bucket_endpoint  "macrostrat-sites.s3.amazonaws.com";
    proxy_http_version     1.1;
    proxy_buffering        off;
    proxy_ignore_headers   "Set-Cookie";
    proxy_hide_header      x-amz-id-2;
    proxy_hide_header      x-amz-request-id;
    proxy_hide_header      x-amz-meta-s3cmd-attrs;
    proxy_hide_header      Set-Cookie;
    proxy_set_header       Authorization "";
    proxy_intercept_errors on;
    proxy_pass https://macrostrat-sites.s3.amazonaws.com;

    proxy_cache            static_sites_cache;
    proxy_cache_revalidate on;
    proxy_cache_use_stale  error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_lock       on;
    proxy_cache_valid      200 304 60m;
    proxy_cache_valid      403 404 1m;

    add_header             Cache-Control max-age=31536000;
    add_header             X-Cache-Status $upstream_cache_status;
  }


}

# Legacy static websites
