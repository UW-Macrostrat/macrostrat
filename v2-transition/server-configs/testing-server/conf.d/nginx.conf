
server {
  # Listen to port 443 on both IPv4 and IPv6.
  listen 443 ssl;
  listen [::]:443 ssl;

  # Domain names this server should respond to.
  server_name next.macrostrat.org;

  # Load the certificate files.
  ssl_certificate         /etc/letsencrypt/live/macrostrat_next/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/macrostrat_next/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/macrostrat_next/chain.pem;

  # Load the Diffie-Hellman parameter.
  # NOTE: this takes a while and we might want to disable...
  # ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

  location / {
    #resolver 127.0.0.11 valid=30s;
    #set $upstream homepage;
    resolver 127.0.0.11 valid=30s;
    set $upstream homepage;
    proxy_pass http://$upstream:3000;
    proxy_set_header Host $host;
  }

  location /shared-files {
    # A listable directory for shared files
    alias /data/share;
    autoindex on;
  }

  location ~/tiles/(.*)$ {
    # This config (including the seemingly useless variable declaration!)
    # prevents failures if some sub-container doesn't come up.
    resolver 127.0.0.11 valid=30s;
    set $upstream tileserver;
    proxy_pass http://$upstream:8000/$1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    # Uvicorn needs these headers to figure out what the proper
    # URL paths for the server are.
    proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # Add CORS headers  s

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
  }

  location /api {
    resolver 127.0.0.11 valid=30s;
    set $upstream api;
    proxy_pass http://$upstream:5000;
    proxy_set_header Host $host;
  }

  location /dacite {
    resolver 127.0.0.11 valid=30s;
    set $upstream dacite;
    proxy_pass http://$upstream:1234;
    proxy_set_header Host $host;
  }

  location /column-topology/{
    resolver 127.0.0.11 valid=30s;
    set $upstream birdseye;
    proxy_pass http://$upstream:1235/;
    proxy_set_header Host $host;
  }
 
  location /psql_api/ {
    resolver 127.0.0.11 valid=30s;
    set $upstream dacite;
    proxy_pass http://$upstream:3001/;
    proxy_hide_header Content-Location;
		add_header Content-Location /psql_api$upstream_http_content_location;
		proxy_hide_header Location;
		add_header Location /psql_api$upstream_http_location;


    location ~ ^/psql_api/detrital_zircon_tile/([0-9]+)/([0-9]+)/([0-9]+).pbf {
      set $upstream http://api:3000/rpc/detrital_zircon_tile?z=$1&x=$2&y=$3;
      proxy_pass $upstream;
      proxy_set_header Accept application/octet-stream;
    }
  }

  location /geologic-map/ {
    resolver 127.0.0.11 valid=30s;
    set $upstream geologic_map_server;
    proxy_pass http://$upstream:8000/;
    proxy_set_header Host $host;
  }
  
}

# Macrostrat's internal Docker registry

server {
  # Docker registry listens on port 5000 for now
  listen 5000 ssl;
  listen [::]:5000 ssl;

  # Domain names this server should respond to.
  server_name next.macrostrat.org;

  # Load the certificate files.
  ssl_certificate         /etc/letsencrypt/live/macrostrat_next/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/macrostrat_next/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/macrostrat_next/chain.pem;

  location / {
    resolver 127.0.0.11 valid=30s;
    set $upstream registry;
    proxy_pass http://$upstream:5000;
    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }

    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;

    client_max_body_size 2g; # max upload size
  }
}
